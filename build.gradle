plugins {
    id 'fabric-loom' version '0.2.7-SNAPSHOT'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

archivesBaseName = project.archives_base_name
version = project.mod_version

repositories {
    maven {
        name = "JitPack"
        url = "https://jitpack.io"
    }
    maven {
        name = "Ladysnake"
        url = "https://dl.bintray.com/ladysnake/libs"
    }
    maven {
        name = "Cotton"
        url = "http://server.bbkr.space:8081/artifactory/libs-release"
    }
    maven {
        name = "BuildCraft"
        url = "https://mod-buildcraft.com/maven"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // javax.annotations.*
    compileOnly "com.google.code.findbugs:jsr305:3.0.2"

    modApi "com.github.OnyxStudios.Cardinal-Components-API:cardinal-components-base:${project.cca_version}"
    modApi "com.github.OnyxStudios.Cardinal-Components-API:cardinal-components-item:${project.cca_version}"
    modApi "io.github.cottonmc:UniversalComponents:${project.uc_version}"
    modApi "io.github.cottonmc:LibGui:${project.libgui_version}"
    modApi "io.github.cottonmc:cotton-resources:${project.cr_version}"

    include "com.github.OnyxStudios.Cardinal-Components-API:cardinal-components-base:${project.cca_version}"
    include "com.github.OnyxStudios.Cardinal-Components-API:cardinal-components-item:${project.cca_version}"
    include "io.github.cottonmc:UniversalComponents:${project.uc_version}"
    include "io.github.cottonmc:LibGui:${project.libgui_version}"
    include "io.github.cottonmc:cotton-resources:${project.cr_version}"

    // Integration tests
    modImplementation "me.shedaniel:RoughlyEnoughItems:${project.rei_version}"

    modRuntime "io.github.prospector:modmenu:${project.modmenu_version}"
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}
